version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lunar-postgres
    environment:
      POSTGRES_DB: lunar_events
      POSTGRES_USER: lunar_user
      POSTGRES_PASSWORD: lunar_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lunar-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lunar_user -d lunar_events"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: lunar-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lunar-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Lunar Event Management Application
  lunar-app:
    build: .
    container_name: lunar-app
    ports:
      - "8080:8080"
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/lunar_events
      SPRING_DATASOURCE_USERNAME: lunar_user
      SPRING_DATASOURCE_PASSWORD: lunar_password
      
      # JPA Configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "false"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "false"
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_LOB_NON_CONTEXTUAL_CREATION: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_HBM2DDL_AUTO: update
      
      # JWT Configuration
      JWT_SECRET: lunar-event-management-secret-key-2024-very-long-and-secure
      JWT_EXPIRATION: 86400000
      JWT_REFRESH_EXPIRATION: 604800000
      
      # Email Configuration
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: ${EMAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${EMAIL_PASSWORD}
      
      # Razorpay Configuration
      RAZORPAY_KEY_ID: ${RAZORPAY_KEY_ID}
      RAZORPAY_KEY_SECRET: ${RAZORPAY_KEY_SECRET}
      RAZORPAY_WEBHOOK_SECRET: ${RAZORPAY_WEBHOOK_SECRET}
      
      # Application Configuration
      APP_BASE_URL: http://localhost:8080
      FILE_UPLOAD_DIR: /app/uploads
      QR_CODE_SIZE: 300
      
      # CORS Configuration
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001
      
      # Logging
      LOGGING_LEVEL_COM_LUNAR: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lunar-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: lunar-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - lunar-app
    networks:
      - lunar-network

volumes:
  postgres_data:
  redis_data:
  uploads_data:

networks:
  lunar-network:
    driver: bridge
